/*
output: src/apps/chifra/pkg/types/types_[[type]]_sort.go
scope: type
*/

{{if .HasSorts}}// Copyright 2016, 2024 The TrueBlocks Authors. All rights reserved.
// Use of this source code is governed by a license that can
// be found in the LICENSE file.
/*
 * Parts of this file were auto generated. Edit only those parts of
 * the code inside of 'EXISTING_CODE' tags.
 */

package types

import "github.com/TrueBlocks/trueblocks-core/src/apps/chifra/v6/pkg/logger"

type {{.Class}}Field string

// Fields in the {{.Class}} struct available for sorting.
{{.SortFields}}

// GetSortFields{{.Class}} returns a []string of valid sort fields for the type.
func GetSortFields{{.Class}}() []string {
	return []string{ {{.SortString}} }
}

// {{.Class}}By returns a comparison function for sorting {{.Class}} instances by the given field.
// These comparison functions may be strung together by the Cmd{{toPlural .Class}} function.
func {{.Class}}By(field {{.Class}}Field, order SortOrder) func(p1, p2 {{.Class}}) bool {
	switch field {
{{.SortSwitches}}
	}
	logger.ShouldNotHappen("in {{.Class}}By")
	return nil
}

// {{.Class}}Cmp accepts a slice and variadic comparison functions and returns a functions
// that can be used to sort the slice.
func {{.Class}}Cmp(slice []{{.Class}}, orders ...func(p1, p2 {{.Class}}) bool) func(i, j int) bool {
	return func(i, j int) bool {
		p1, p2 := slice[i], slice[j]
		for _, order := range orders {
			if order(p1, p2) {
				return true
			}
			if order(p2, p1) {
				return false
			}
		}
		return false
	}
}
{{end}}
